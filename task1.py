# -*- coding: utf-8 -*-
"""Task1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LpHmOJeNVfDejk-CxcO0KTuNvfNMI7KP
"""

def lcs(a, b):
    m = len(a)
    n = len(b)
    c = [[{'val': 0, 'dir': ''} for j in range(n + 1)] for i in range(m + 1)]

    for i in range(1, m + 1):
        for j in range(1, n + 1):
            if a[i - 1] == b[j - 1]:
                c[i][j]['val'] = c[i - 1][j - 1]['val'] + 1
                c[i][j]['dir'] = 'd'
            else:
                if c[i - 1][j]['val'] >= c[i][j - 1]['val']:
                    c[i][j]['val'] = c[i - 1][j]['val']
                    c[i][j]['dir'] = 'u'
                else:
                    c[i][j]['val'] = c[i][j - 1]['val']
                    c[i][j]['dir'] = 's'

    lcs_length = c[m][n]['val']
    lcs_sequence = []
    i, j = m, n
    while i > 0 and j > 0:
        if c[i][j]['dir'] == 'd':
            lcs_sequence.append(a[i - 1])
            i -= 1
            j -= 1
        elif c[i][j]['dir'] == 'u':
            i -= 1
        else:
            j -= 1
    lcs_sequence.reverse()
    return c, lcs_length, ''.join(lcs_sequence)

X = "AGCCCTAAGGGCTACCTAGCTT"
Y = "GACAGCCTACAAGCGTTAGCTTG"
cost_matrix, lcs_length, lcs_sequence = lcs(X, Y)

print("Cost Matrix (Length of LCS):")
for row in cost_matrix:
    print([f"{cell['val']}" for cell in row])

print(f"\nLength of LCS: {lcs_length}")
print(f"LCS: {lcs_sequence}")