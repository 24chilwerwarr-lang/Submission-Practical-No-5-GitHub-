# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13_nhMmmgFKMO9Hr9pxP1aY3Gf4arUmul
"""

def LRS_two_strings(a, b):
    n, m = len(a), len(b)
    c = [[0] * (m + 1) for _ in range(n + 1)]

    for i in range(1, n + 1):
        for j in range(1, m + 1):
            if a[i - 1] == b[j - 1] and i != j:
                c[i][j] = 1 + c[i - 1][j - 1]
            else:
                c[i][j] = max(c[i - 1][j], c[i][j - 1])

    i, j = n, m
    lrs = []
    while i > 0 and j > 0:
        if a[i - 1] == b[j - 1] and i != j:
            lrs.append(a[i - 1])
            i -= 1
            j -= 1
        elif c[i - 1][j] > c[i][j - 1]:
            i -= 1
        else:
            j -= 1

    return c[n][m], "".join(reversed(lrs))


a = "AABEBCDD"
b = "AABEBCDD"
length, subseq = LRS_two_strings(a, b)

print("LRS length:", length)
print("LRS subsequence:", subseq)
